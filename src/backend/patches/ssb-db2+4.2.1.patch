diff --git a/node_modules/ssb-db2/db.js b/node_modules/ssb-db2/db.js
index 1e4220e..25c3941 100644
--- a/node_modules/ssb-db2/db.js
+++ b/node_modules/ssb-db2/db.js
@@ -69,6 +69,7 @@ exports.manifest = {
   compact: 'async',
   indexingProgress: 'source',
   compactionProgress: 'source',
+  reset: 'async',
 
   // `query` should be `sync`, but secret-stack is automagically converting it
   // to async because of secret-stack/utils.js#hookOptionalCB. Eventually we
@@ -101,7 +102,7 @@ exports.init = function (sbot, config) {
   const compactionProgress = Notify()
   const indexingActive = Obv().set(0)
   let abortLogStreamForIndexes = null
-  const compacting = Obv().set(false)
+  const compacting = Obv().set(!log.compactionProgress.value.done)
   const hmacKey = null
   const stateFeedsReady = Obv().set(false)
   const state = {}
@@ -531,7 +532,9 @@ exports.init = function (sbot, config) {
 
             push(
               push.values(offsets),
-              push.asyncMap(log.del),
+              push.asyncMap((offset, cb) => {
+                setTimeout(() => log.del(offset, cb))
+              }),
               push.collect((err) => {
                 // prettier-ignore
                 if (err) return cb(clarify(err, 'deleteFeed() failed for feed ' + feedId))
@@ -849,6 +852,18 @@ exports.init = function (sbot, config) {
     }
   })
 
+  function reset(cb) {
+    stopUpdatingIndexes()
+    const done = multicb({ pluck: 1 })
+    status.reset()
+    resetAllIndexes(done())
+    privateIndex.reset(done())
+    done(() => {
+      resumeUpdatingIndexes()
+      cb()
+    })
+  }
+
   return (self = {
     // Public API:
     get,
@@ -870,6 +885,7 @@ exports.init = function (sbot, config) {
     reindexEncrypted,
     indexingProgress: () => indexingProgress.listen(),
     compactionProgress: () => compactionProgress.listen(),
+    reset,
 
     // used for partial replication in browser, will be removed soon!
     setPost: post.set,
