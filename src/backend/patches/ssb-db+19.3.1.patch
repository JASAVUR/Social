diff --git a/node_modules/ssb-db/create.js b/node_modules/ssb-db/create.js
index ec47ca5..422c7b5 100644
--- a/node_modules/ssb-db/create.js
+++ b/node_modules/ssb-db/create.js
@@ -55,7 +55,7 @@ module.exports = function (path, opts, keys) {
     }
 
     if (ref.isMsg(key)) {
-      return db.keys.get(key, function (err, data) {
+      return db.keys.get(key, function (err, data, offset) {
         if (err) return cb(err)
 
         if (isPrivate && unbox) {
@@ -70,7 +70,7 @@ module.exports = function (path, opts, keys) {
           result = u.originalValue(data.value)
         }
 
-        cb(null, !meta ? result : {key: data.key, value: result, timestamp: data.timestamp})
+        cb(null, !meta ? result : {key: data.key, value: result, timestamp: data.timestamp}, offset)
       })
     } else if (ref.isMsgLink(key)) {
       var link = ref.parseLink(key)
@@ -138,7 +138,7 @@ module.exports = function (path, opts, keys) {
   }
 
   // should be private
-  db.createHistoryStream = db.clock.createHistoryStream
+  // db.createHistoryStream = db.clock.createHistoryStream
 
   // called with [id, seq] or "<id>:<seq>"
   db.getAtSequence = function (seqid, cb) {
diff --git a/node_modules/ssb-db/db.js b/node_modules/ssb-db/db.js
index 21fdb5c..49da485 100644
--- a/node_modules/ssb-db/db.js
+++ b/node_modules/ssb-db/db.js
@@ -3,7 +3,7 @@ var FlumeviewLevel = require('flumeview-level')
 module.exports = function (dir, keys, opts) {
   const db = require('./minimal')(dir, keys, opts)
     .use('keys', FlumeviewLevel(3, (msg) => [ msg.key ]))
-    .use('clock', require('./indexes/clock')())
+    // .use('clock', require('./indexes/clock')())
 
   db.progress = {}
   var prog = db.progress.indexes = {
diff --git a/node_modules/ssb-db/extras.js b/node_modules/ssb-db/extras.js
index 78f6cda..7b6610c 100644
--- a/node_modules/ssb-db/extras.js
+++ b/node_modules/ssb-db/extras.js
@@ -9,7 +9,7 @@ module.exports = function (db, config, keys) {
     .use('time', ViewLevel(2, function (data) {
       return [data.timestamp]
     }))
-    .use('feed', require('./indexes/feed')())
+    // .use('feed', require('./indexes/feed')())
     .use('links', require('./indexes/links')())
 
   db.createLogStream = function (opts) {
@@ -24,9 +24,9 @@ module.exports = function (db, config, keys) {
   }
 
   // TODO: eventually, this should filter out authors you do not follow.
-  db.createFeedStream = db.feed.createFeedStream
+  // db.createFeedStream = db.feed.createFeedStream
 
-  db.createUserStream = db.clock.createUserStream
+  // db.createUserStream = db.clock.createUserStream
 
   db.latest = db.last.latest
 
diff --git a/node_modules/ssb-db/index.js b/node_modules/ssb-db/index.js
index 7be3093..1eb2947 100644
--- a/node_modules/ssb-db/index.js
+++ b/node_modules/ssb-db/index.js
@@ -13,11 +13,11 @@ function isFunction (f) { return 'function' === typeof f }
 
 var manifest = {
   get: 'async',
-  createFeedStream: 'source',
+  // createFeedStream: 'source',
   createLogStream: 'source',
   messagesByType: 'source',
-  createHistoryStream: 'source',
-  createUserStream: 'source',
+  // createHistoryStream: 'source',
+  // createUserStream: 'source',
   createWriteStream: 'sink',
   links: 'source',
   add: 'async',
@@ -142,10 +142,10 @@ module.exports = {
       latestSequence           : valid.async(ssb.latestSequence, 'feedId'),
       createFeed               : ssb.createFeed,
       whoami                   : function () { return { id: feed.id } },
-      createFeedStream         : valid.source(ssb.createFeedStream, 'readStreamOpts?'),
-      createHistoryStream      : valid.source(ssb.createHistoryStream, ['createHistoryStreamOpts'], ['feedId', 'number?', 'boolean?']),
+      // createFeedStream         : valid.source(ssb.createFeedStream, 'readStreamOpts?'),
+      // createHistoryStream      : valid.source(ssb.createHistoryStream, ['createHistoryStreamOpts'], ['feedId', 'number?', 'boolean?']),
       createLogStream          : valid.source(ssb.createLogStream, 'readStreamOpts?'),
-      createUserStream         : valid.source(ssb.createUserStream, 'createUserStreamOpts'),
+      // createUserStream         : valid.source(ssb.createUserStream, 'createUserStreamOpts'),
       links                    : valid.source(ssb.links, 'linksOpts'),
       sublevel                 : ssb.sublevel,
       messagesByType           : valid.source(ssb.messagesByType, 'string|messagesByTypeOpts'),
